@using Moneyes.Core

@inject IDialogService DialogService

<div style="height: 100%; overflow-y: scroll;">
    @if (!Transactions.Any())
    {
        <text>No transactions yet.</text>
    }
    else
    {
        <MudList Clickable="true" Dense="true"  >
            <Virtualize Items="Transactions" Context="transaction">
                <MudListItem Class="hover-parent" OnClick="() => ShowDetails(transaction)">
                    @*<MudPaper Height="100" Class="px-3">*@
                    <div class="d-flex justify-space-between pb-1">
                        <MudText Typo="Typo.subtitle1" Class="flex-5"><b>@transaction.Name</b></MudText>
                        <MudText Typo="Typo.subtitle1" Align="Align.End"
                             Color="@(transaction.Amount < 0 ? Color.Error : Color.Success )">
                            <b>@transaction.Amount.ToString("0.00") @transaction.Currency</b>
                        </MudText>
                    </div>
                    <div class="d-flex justify-space-between align-end">
                        <div>
                            <MudText Class="d-block" Typo="Typo.caption">@transaction.Purpose</MudText>
                            <MudText Class="d-block" Color="Color.Info" Typo="Typo.caption">
                                @transaction.BookingDate.ToString("dd.MM.yyyy")
                            </MudText>
                        </div>
                        <MudIconButton Size="Size.Small"
                               @onmousedown:stopPropagation="true"
                               @onmouseup:stopPropagation="true"
                                   Class="parent-hover-show fade-visibility"
                                   OnClick="() => ShowDetails(transaction)" Icon="@Icons.Material.Outlined.Info"></MudIconButton>
                    </div>
                    @*</MudPaper>*@
                </MudListItem>
                <MudDivider />
            </Virtualize>
        </MudList>
    }
</div>

@code {
    [Parameter]
    public ICollection<Transaction> Transactions { get; set; }

    void ShowDetails(Transaction transaction)
    {
        var dialog = DialogService.Show<TransactionDetails>("",
            new DialogParameters()
                {
                    ["Transaction"] = transaction
                });
    }
}