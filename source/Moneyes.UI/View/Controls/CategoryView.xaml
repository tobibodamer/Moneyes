<UserControl x:Class="Moneyes.UI.View.CategoryView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:local="clr-namespace:Moneyes.UI.View"
             xmlns:vm="clr-namespace:Moneyes.UI.ViewModels"
             xmlns:m="clr-namespace:Moneyes.Core;assembly=Moneyes.Core"
             xmlns:controls="clr-namespace:System.Windows.Controls;assembly=MultiSelectTreeView"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" 
             xmlns:system="clr-namespace:System;assembly=System.Runtime"
             xmlns:filters="clr-namespace:Moneyes.Core.Filters;assembly=Moneyes.Core"
             d:DataContext="{d:DesignInstance Type=vm:EditCategoryViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             d:Background="White">
    <UserControl.Resources>
        <local:EnumBoolConverter x:Key="EnumBoolConverter"/>
        <local:CollectionStringConverter x:Key="CollectionStringConverter"/>
        <local:EnumDescriptionConverter x:Key="EnumDescriptionConverter"/>
        <local:CompositeCollectionConverter x:Key="CompositeCollectionConverter"/>
        <local:SingleToCollectionConverter x:Key="SingleToCollectionConverter"/>
        <local:EmptyStringNullConverter x:Key="EmptyStringNullConverter"/>
        <local:EmptyItemConverter x:Key="EmptyItemConverter"/>
        <local:TreeLevelConverter x:Key="TreeLevelConverter"/>

        <Style x:Key="MaterialDesignRemoveItemCommandButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignMenuCommandButtonStyle}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="{DynamicResource PrimaryHueLightBrush}" />
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueLightForegroundBrush}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid>
                            <Ellipse Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Fill="{TemplateBinding Background}" />
                            <Path Name="Path" Data="F0 M 6,38 L 0003451911513,38"
                                                  Width="6" Height="6" Stretch="Uniform" Stroke="{TemplateBinding Foreground}" 
                                                  StrokeThickness="2" StrokeStartLineCap="Square" StrokeEndLineCap="Square" 
                                                  SnapsToDevicePixels="True" Opacity="0.8"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
            <Setter Property="Width" Value="12" />
            <Setter Property="Height" Value="12" />
            <Setter Property="Margin" Value="4 0 2 0" />
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
        </Style>
    </UserControl.Resources>
    <Grid MinWidth="500" Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>            
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <TextBox x:Name="NameField" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Text="{Binding Name}" Grid.Column="1" 
                 materialDesign:HintAssist.Hint="Name" FontSize="20" FontWeight="SemiBold"
                 HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5" Width="200"
                 IsReadOnly="{Binding IsRealCategory, Converter={StaticResource InvertBooleanConverter}}" Cursor="IBeam"/>

        <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="1" Margin="0,5,0,20">
            <StackPanel.Resources>
                <ComboBoxItem x:Key="NullItem" IsEnabled="True" Foreground="{StaticResource PrimaryHueMidBrush}">
                    &lt;No category&gt;
                </ComboBoxItem>
                <CompositeCollection x:Key="ParentsCollection">
                    <StaticResource ResourceKey="NullItem"/>
                    <CollectionContainer Collection="{Binding DataContext.PossibleParents, 
                            Source={x:Reference ParentComboBox}}"/>
                </CompositeCollection>
            </StackPanel.Resources>
            <ComboBox Name="ParentComboBox" Text="No category" ItemsSource="{DynamicResource ParentsCollection}" 
                      SelectedItem="{Binding Parent, Converter={StaticResource EmptyItemConverter}, ConverterParameter={StaticResource NullItem}}"
                      DisplayMemberPath="Name"
                  Grid.Row="1" Grid.Column="1" Width="150" VerticalAlignment="Top" materialDesign:HintAssist.Hint="Parent category"
                  materialDesign:HintAssist.IsFloating="True" FontSize="15" materialDesign:ComboBoxAssist.ShowSelectedItem="True"
                  HorizontalAlignment="Left" Margin="5,5,20,5" Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                      IsEnabled="{Binding IsRealCategory}">
                <ComboBox.Resources>
                </ComboBox.Resources>
                <!--<ComboBox.Style>
                    <Style TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignFloatingHintComboBox}">
                        <Style.Triggers>
                            <Trigger Property="SelectedItem" Value="{StaticResource NullItem}">
                                <Setter Property="SelectedValue" Value="{x:Null}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>-->
            </ComboBox>

            <StackPanel Grid.Column="1" Grid.Row="3" Orientation="Horizontal" VerticalAlignment="Top" Margin="5">
                <TextBox Text="{Binding Target, Converter={StaticResource EmptyStringNullConverter}}"
                         Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                Grid.Column="1" Grid.Row="3" Width="80" materialDesign:TextFieldAssist.SuffixText="EUR"
                HorizontalAlignment="Stretch" VerticalAlignment="Top" materialDesign:HintAssist.Hint="Budget" 
                FontSize="15" Cursor="IBeam"/>
            </StackPanel>
        </StackPanel>

        <!--<CheckBox Content="Use Filter" Grid.Row="2" IsChecked="True" Margin="5,10,10,10"/>-->

        <GroupBox Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Margin="5" Header="Filter" Style="{StaticResource MaterialDesignCardGroupBox}"
                  Visibility="{Binding IsRealCategory, Converter={StaticResource BooleanToVisibilityConverter}}">
            <!--<GroupBox.HeaderTemplate>
                <DataTemplate>
                    <Grid>
                        <TextBlock Text="Filter" VerticalAlignment="Center"/>
                        
                        <CheckBox HorizontalAlignment="Right" Style="{StaticResource MaterialDesignLightCheckBox}"/>
                    </Grid>
                </DataTemplate>
            </GroupBox.HeaderTemplate>-->
            <Grid Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2" Margin="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="3*"/>
                    </Grid.ColumnDefinitions>
                    <ComboBox Name="TransactionTypeComboBox" Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                          SelectedItem="{Binding TransactionType}" Grid.Column="0"
                          materialDesign:HintAssist.Hint="Transaction type" materialDesign:ComboBoxAssist.ShowSelectedItem="True"
                          Grid.Row="0" Margin="10,0,10,20"/>

                    <TextBox Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                          Text="{Binding MinAmount, Converter={StaticResource EmptyStringNullConverter}}" Grid.Column="1"
                          materialDesign:HintAssist.Hint="Min amount" materialDesign:ComboBoxAssist.ShowSelectedItem="True"
                          Grid.Row="0" Margin="10,0,10,20"/>

                    <TextBox Style="{StaticResource MaterialDesignFloatingHintTextBox}"                             
                          Text="{Binding MaxAmount, Converter={StaticResource EmptyStringNullConverter}}" Grid.Column="2"
                          materialDesign:HintAssist.Hint="Max amount" materialDesign:ComboBoxAssist.ShowSelectedItem="True"
                          Grid.Row="0" Margin="10,0,10,20" Cursor="IBeam"/>
                </Grid>

                <TreeView Grid.Row="4" ItemsSource="{Binding Filter, Converter={StaticResource SingleToCollectionConverter}}" Grid.Column="0"
                      materialDesign:RippleAssist.IsDisabled="True" HorizontalAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                      BorderBrush="#ddd" BorderThickness="0">
                    <TreeView.Resources>
                        <Style TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignComboBox}">
                            <Setter Property="Padding" Value="5"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="AliceBlue"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                        <Style TargetType="Button" x:Key="AddButtonStyle" BasedOn="{StaticResource MaterialDesignAddItemCommandButtonStyle}">
                            <Setter Property="Width" Value="25"/>
                            <Setter Property="Height" Value="25"/>
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                        </Style>
                        <Style TargetType="Button" x:Key="RemoveButtonStyle" BasedOn="{StaticResource MaterialDesignRemoveItemCommandButtonStyle}">
                            <Setter Property="Width" Value="25"/>
                            <Setter Property="Height" Value="25"/>
                        </Style>
                        <DataTemplate DataType="{x:Type vm:ConditionFilterViewModel}">
                            <Border BorderBrush="Gray" BorderThickness="0" CornerRadius="3" Padding="0" HorizontalAlignment="Stretch">
                                <Grid Margin="5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="0.3*"
                                                          SharedSizeGroup="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Grid}}, Converter={StaticResource TreeLevelConverter}, ConverterParameter=A}"/>
                                        <ColumnDefinition Width="0.3*"
                                                          SharedSizeGroup="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Grid}}, Converter={StaticResource TreeLevelConverter}, ConverterParameter=B}"/>
                                        <ColumnDefinition Width="0.6*"
                                                          SharedSizeGroup="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Grid}}, Converter={StaticResource TreeLevelConverter}, ConverterParameter=C}"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <ComboBox Grid.Column="0"
                                ItemsSource="{Binding FilterProperties}" 
                                SelectedValue="{Binding Property, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                VerticalContentAlignment="Center"
                                Margin="0,0,15,0"/>

                                    <ComboBox Grid.Column="1"
                                ItemsSource="{Binding Operators}"
                                SelectedValue="{Binding Operator, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                VerticalContentAlignment="Center"                                          
                                Margin="0,0,15,0"/>

                                    <TextBox Height="24" Grid.Column="2" Margin="0,0,15,0" Visibility="Hidden" x:Name="TemplateTextBox"/>

                                    <TextBox Height="24" VerticalContentAlignment="Center" Grid.Column="2" MaxWidth="{Binding ElementName=TemplateTextBox, Path=ActualWidth}"
                                     Style="{StaticResource MaterialDesignTextBox}"
                                     Text="{Binding Content, Converter={StaticResource CollectionStringConverter}}"
                                     Margin="0,0,15,0"/>

                                    <StackPanel Grid.Column="3" Orientation="Horizontal">
                                        <Button Command="{Binding AddCommand}" Style="{StaticResource AddButtonStyle}"/>
                                        <Button Command="{Binding DeleteCommand}" Style="{StaticResource RemoveButtonStyle}"/>
                                    </StackPanel>
                                </Grid>
                            </Border>
                        </DataTemplate>
                        <HierarchicalDataTemplate DataType="{x:Type vm:FilterViewModel}">
                            <HierarchicalDataTemplate.ItemsSource>
                                <MultiBinding Converter="{StaticResource CompositeCollectionConverter}">
                                    <Binding Path="Conditions"/>
                                    <Binding Path="ChildFilters"/>
                                </MultiBinding>
                            </HierarchicalDataTemplate.ItemsSource>
                            <Border BorderBrush="Gray" BorderThickness="0" CornerRadius="3" Padding="5">
                                <Grid>
                                    <StackPanel Orientation="Horizontal">
                                        <RadioButton Content="Match any below" VerticalAlignment="Center" Margin="0,0,10,0"
                         IsChecked="{Binding LogicalOperator, Converter={StaticResource EnumBoolConverter}, 
                                    ConverterParameter={x:Static filters:LogicalOperator.Or}, UpdateSourceTrigger=PropertyChanged}"
                                                     Style="{StaticResource MaterialDesignToolRadioButton}"/>
                                        
                                        <RadioButton Content="Match all below" VerticalAlignment="Center" Margin="0,0,10,0"
                                                     Style="{StaticResource MaterialDesignToolRadioButton}"
                         IsChecked="{Binding LogicalOperator, Converter={StaticResource EnumBoolConverter}, 
                                    ConverterParameter={x:Static filters:LogicalOperator.And}, UpdateSourceTrigger=PropertyChanged}"/>

                                    </StackPanel>

                                    <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                        <Button Command="{Binding AddCommand}" Style="{StaticResource AddButtonStyle}"/>
                                        <Button Command="{Binding DeleteCommand}" Style="{StaticResource RemoveButtonStyle}"/>
                                    </StackPanel>
                                </Grid>
                            </Border>
                        </HierarchicalDataTemplate>
                    </TreeView.Resources>
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="TreeViewItem" BasedOn="{StaticResource MaterialDesignTreeViewItem}">
                            <Setter Property="Focusable" Value="False" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="Padding" Value="1"/>
                            <Setter Property="IsExpanded" Value="True" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="white"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter Property="Background" Value="white"/>
                                </Trigger>
                                <Trigger Property="IsMouseCaptured" Value="True">
                                    <Setter Property="Background" Value="white"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="white"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="False">
                                    <Setter Property="Background" Value="white"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TreeView.ItemContainerStyle>
                </TreeView>
            </Grid>
        </GroupBox>
    </Grid>
</UserControl>
